name: Build and Deploy to Kubernetes
on:
  push:
    branches:
      - main
      - develop

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.info.outputs.tag }}
      revision: ${{ steps.info.outputs.revision }}
      reponame: ${{ steps.info.outputs.reponame }}
      reponame_lowercase: ${{ steps.info.outputs.reponame_lowercase }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract commit info
        id: info
        run: |
          tag="$(git describe --tags 2>/dev/null)" || true
          date="$(git log -1 --pretty='format:%cd' --date=short 2>/dev/null)"
          hash="$(git log -1 --pretty='format:%h' 2>/dev/null)"
          test "$tag" && revision="$tag-$hash" || revision="$date-$hash"
          echo "::set-output name=tag::$tag"
          echo "::set-output name=revision::$revision"
          test "$reponame" || reponame="${GITHUB_REPOSITORY##*/}"
          test "$reponame_lowercase" || reponame_lowercase="${reponame,,}"
          echo "::set-output name=reponame::$reponame"
          echo "::set-output name=reponame_lowercase::$reponame_lowercase"

      - name: Download NjuPsHwApi
        run: |
          APIVERSION="$(cat APIVERSION.txt)"
          wget "https://github.com/Undefined01/NjuPsHwServer/releases/download/${APIVERSION}/ts-client.zip"
          unzip ts-client.zip

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: '${{ secrets.DOCKER_HUB_USERNAME }}'
          password: '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./deployment/Dockerfile
          build-args: REVISION=${{ steps.info.outputs.revision }}
          builder: '${{ steps.buildx.outputs.name }}'
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:${{ steps.info.outputs.revision }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:buildcache,mode=max

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v3
      - uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v4
        with:
          namespace: njupshw-dev
          manifests: |
            deployment/deployment.yml
            deployment/service.yml
          images:
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ needs.build.outputs.reponame_lowercase }}:${{ needs.build.outputs.revision }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v3
      - uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v4
        with:
          namespace: njupshw
          manifests: |
            deployment/deployment.yml
            deployment/service.yml
          images:
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ needs.build.outputs.reponame_lowercase }}:${{ needs.build.outputs.revision }}
